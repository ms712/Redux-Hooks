[{"/home/mosamshah/Desktop/Redux-Hooks/demo/src/index.js":"1","/home/mosamshah/Desktop/Redux-Hooks/demo/src/App.js":"2","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/AddProduct.jsx":"3","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/AddProductForm.js":"4","/home/mosamshah/Desktop/Redux-Hooks/demo/src/app/store.js":"5","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Redux/Reducer/index.js":"6","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/ProductTable.jsx":"7","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/ProductTable.js":"8","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/ViewProduct.js":"9","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/EditProductForm.js":"10"},{"size":337,"mtime":1609403045395,"results":"11","hashOfConfig":"12"},{"size":245,"mtime":1609413786832,"results":"13","hashOfConfig":"12"},{"size":1824,"mtime":1609506721507,"results":"14","hashOfConfig":"12"},{"size":4747,"mtime":1609403461279,"results":"15","hashOfConfig":"12"},{"size":297,"mtime":1609321382768,"results":"16","hashOfConfig":"12"},{"size":2383,"mtime":1609579859892,"results":"17","hashOfConfig":"12"},{"size":230,"mtime":1609386956785,"results":"18","hashOfConfig":"12"},{"size":3004,"mtime":1609579954295,"results":"19","hashOfConfig":"12"},{"size":2219,"mtime":1609575722888,"results":"20","hashOfConfig":"12"},{"size":6155,"mtime":1609578150596,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tcjevm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mosamshah/Desktop/Redux-Hooks/demo/src/index.js",[],["46","47"],"/home/mosamshah/Desktop/Redux-Hooks/demo/src/App.js",[],"/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/AddProduct.jsx",["48","49","50","51","52"],"import React ,{useState} from 'react'\nimport AddProductForm from './Modal/AddProductForm'\nimport { useDispatch } from 'react-redux'\n\nfunction AddProduct() {\n    const [productName, setProductName] = useState(\"\");\n    const [productPrice, setProductPrice] = useState(\"\");\n    const [productTitle, setproductTitle] = useState(\"\");\n    const [productImage,setProductImage] = useState(\"\");\n    // const [itemList,setItemList] = useState([])\n    let dispatch = useDispatch()\n\n    const onUpdateInput = (e)=>{\n        console.log(\"items\",e.target.value)\n        e.preventDefault();\n        if(e.target.name == \"productName\"){\n            setProductName(e.target.value)\n        }\n        if(e.target.name == \"productPrice\"){\n            setProductPrice(e.target.value)\n        }\n        if(e.target.name == \"productTitle\"){\n            setproductTitle(e.target.value)\n        }\n        if(e.target.name == \"productImage\"){\n            setProductImage(e.target.value)\n        }     \n\n    }\n\n    const onHandleInput = (e) =>{\n      \n        e.preventDefault();\n\n        // let allitem = []\n        let item = {\n            productName:productName,\n            productPrice:productPrice,\n            productTitle:productTitle,\n            productImage:productImage,\n            id:Date.now()\n        }\n        \n        // setItemList(item)\n        // allitem.push(item)\n       let value  = dispatch(\n            { \n                type: 'ADD_PRODUCT',\n                payload:{\n                    item\n                }\n                \n                        \n            }    \n        )\n       \n\n    }\n\n\n    return (\n        <>\n            <AddProductForm                \n                onUpdateInput = {onUpdateInput}\n                onHandleInput = {onHandleInput}\n            />\n        </>\n    )\n}\n\nexport default AddProduct\n","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/AddProductForm.js",["53"],"import React from 'react'\nimport {Form,Button} from 'react-bootstrap'\nfunction AddProductForm(props) {\n    return (\n        <>\n\n       \n            <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"modal-title\" id=\"exampleModalLongTitle\">Add Product Form</h3>\n                            <button type=\"button\" className=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Form>\n                                <Form.Group controlId=\"formBasicProductName\">\n                                    <Form.Label>Product Name</Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Product Name\" \n                                        onChange = {\n                                            (e)=>props.onUpdateInput(e)\n                                        }\n                                        name = \"productName\"    \n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPrice\">\n                                    <Form.Label>Product Price</Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Product Price\" \n                                        onChange = {\n                                            (e)=>props.onUpdateInput(e)\n                                        }\n                                        name = \"productPrice\"\n                                    />                                   \n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicTitle\">\n                                    <Form.Label>Product Title</Form.Label>\n                                    <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Enter title\" \n                                        onChange = {\n                                            (e)=>props.onUpdateInput(e)\n                                        } \n                                        name = \"productTitle\"       \n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicImage\">\n                                    <Form.Label>Product Image</Form.Label>\n                                    <Form.File \n                                      \n                                        placeholder=\"Enter Image\" \n                                        name=\"file\"\n                                        label=\"File\"\n                                        onChange = {\n                                            (e)=>props.onUpdateInput(e)\n                                        }\n                                        name = \"productImage\"\n                                    />\n                                </Form.Group>                               \n                                <Button     variant=\"primary\" type=\"submit\"\n                                 onClick = {(e)=>props.onHandleInput(e)}\n                                 data-bs-dismiss=\"modal\" \n                                >\n                                    Add\n                                </Button>\n                            </Form>\n                       \n                            \n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                            {/* <button type=\"button\" className=\"btn btn-primary\">Add Product</button> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n       \n            <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalCenter\"\n        \n            \n            >\n                Add Product\n            </button>                           \n        </>\n    )\n}\n\nexport default AddProductForm\n","/home/mosamshah/Desktop/Redux-Hooks/demo/src/app/store.js",[],"/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Redux/Reducer/index.js",["54","55","56","57","58","59"],"/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/ProductTable.jsx",[],"/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/ProductTable.js",["60"],"/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/ViewProduct.js",["61","62","63"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Card } from 'react-bootstrap'\n\nfunction ViewProduct() {\n    const data = useSelector(state => state.productitem)\n\n     \n    let pro = data.filter((e)=>typeof(e)==\"object\") \n        \n               \n      \n      \n     \n\n    \n    \n    console.log(\"item\",pro);\n    \n    return (\n\n        <>\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\"   aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">{pro[0] ? pro[0].productTitle : \"\"}</h5>\n                            <button type=\"button\" className=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"card\" Style=\"width: 18rem;\">            \n                                <img className=\"card-img-top\" src= \"https://placeimg.com/640/480/any\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Price:{pro[0] ? pro[0].productPrice:\"\"}</h5>\n                                    <p className=\"card-text\"><h3></h3>{pro[0] ?pro[0].productName:\"\"}</p>\n                                    {/* <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a> */}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default ViewProduct\n","/home/mosamshah/Desktop/Redux-Hooks/demo/src/Components/Modal/EditProductForm.js",["64","65","66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":16,"column":26,"nodeType":"75","messageId":"76","endLine":16,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":19,"column":26,"nodeType":"75","messageId":"76","endLine":19,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":22,"column":26,"nodeType":"75","messageId":"76","endLine":22,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":25,"column":26,"nodeType":"75","messageId":"76","endLine":25,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":46,"column":12,"nodeType":"79","messageId":"80","endLine":46,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":62,"column":41,"nodeType":"83","endLine":62,"endColumn":62},{"ruleId":"84","severity":1,"message":"85","line":9,"column":1,"nodeType":"86","endLine":107,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":32,"column":49,"nodeType":"89","messageId":"90","endLine":32,"endColumn":51},{"ruleId":"73","severity":1,"message":"74","line":33,"column":22,"nodeType":"75","messageId":"76","endLine":33,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":33,"column":55,"nodeType":"75","messageId":"76","endLine":33,"endColumn":57},{"ruleId":"87","severity":1,"message":"88","line":65,"column":51,"nodeType":"89","messageId":"90","endLine":65,"endColumn":53},{"ruleId":"73","severity":1,"message":"74","line":66,"column":24,"nodeType":"75","messageId":"76","endLine":66,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":24,"column":25,"nodeType":"93","endLine":24,"endColumn":117},{"ruleId":"77","severity":1,"message":"94","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":34,"column":33,"nodeType":"93","endLine":34,"endColumn":126},{"ruleId":"95","severity":1,"message":"96","line":37,"column":62,"nodeType":"93","endLine":37,"endColumn":66},{"ruleId":"73","severity":1,"message":"74","line":22,"column":26,"nodeType":"75","messageId":"76","endLine":22,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":25,"column":26,"nodeType":"75","messageId":"76","endLine":25,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":28,"column":26,"nodeType":"75","messageId":"76","endLine":28,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":31,"column":26,"nodeType":"75","messageId":"76","endLine":31,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":113,"column":41,"nodeType":"83","endLine":113,"endColumn":62},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Card' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]